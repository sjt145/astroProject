---
interface Props {
  title: string;
  body: string;
  href: string;
  icon: string;
}

const { href, title, body, icon } = Astro.props;

const colors = [
  '#ffffff', '#e0f7fa', '#ffecb3', '#dcedc8', '#fff9c4', '#d1c4e9'
];

function getRandomColor() {
  return colors[Math.floor(Math.random() * colors.length)];
}

const backgroundColor = getRandomColor();
---

<li class="link-card" style={`background-color: ${backgroundColor};`}>
  <a href={href}>
    <h2>
      <i class={icon}></i>
      {title}
      <span>&rarr;</span>
    </h2>
    <p>{body}</p>
  </a>
</li>

<style>
  .link-card {
    list-style: none;
    display: flex;
    padding: 1px;
    background-image: none;
    background-size: 400%;
    border-radius: 7px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);
  }
  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: var(--primary-text);
  }
  h2 {
    display: flex;
    align-items: center;
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  h2 i {
    margin-right: 0.5rem;
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: linear-gradient(45deg, #1a73e8, #1a73e8 30%, white 60%);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: var(--primary-text);
  }
</style>
